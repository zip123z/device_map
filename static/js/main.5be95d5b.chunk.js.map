{"version":3,"sources":["App.js","index.js"],"names":["App","areas","setAreas","useState","selectedArea","setSelectedArea","devices","setDevices","floorplan","setFloorplan","selectedDevice","setSelectedDevice","deviceDetails","setDeviceDetails","showDeviceInfo","setShowDeviceInfo","showRepairForm","setShowRepairForm","repairForm","setRepairForm","subject","description","contactPerson","contactPhone","maintenanceRecords","setMaintenanceRecords","showMaintenanceRecords","setShowMaintenanceRecords","requestTypes","setRequestTypes","showRequestTypes","setShowRequestTypes","repairFormFields","setRepairFormFields","formFields","setFormFields","formTitle","setFormTitle","useEffect","axios","get","then","response","data","catch","error","console","selectedAreaData","find","area","id","parseInt","floorplans","React","createElement","className","onChange","e","areaId","target","value","map","key","name","style","width","marginTop","position","src","alt","device","top","y","left","x","height","backgroundColor","borderRadius","transform","cursor","title","type","onClick","deviceId","d","deviceInfo","deviceInfoCount","length","prevDetails","資料","records","maintenanceCount","lastMaintenanceDate","sort","a","b","Date","date","handleDeviceClick","Object","entries","_ref","handleMaintenanceCountClick","handleOpenRequestForm","typeId","handleRequestTypeClick","record","onSubmit","preventDefault","post","formType","alert","field","label","required","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5be95d5b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css';\n\nfunction App() {\n  const [areas, setAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [floorplan, setFloorplan] = useState(null);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [deviceDetails, setDeviceDetails] = useState({});\n  const [showDeviceInfo, setShowDeviceInfo] = useState(false);\n  const [showRepairForm, setShowRepairForm] = useState(false);\n  const [repairForm, setRepairForm] = useState({\n    subject: '',\n    description: '',\n    contactPerson: '',\n    contactPhone: ''\n  });\n  const [maintenanceRecords, setMaintenanceRecords] = useState([]);\n  const [showMaintenanceRecords, setShowMaintenanceRecords] = useState(false);\n  const [requestTypes, setRequestTypes] = useState([]);\n  const [showRequestTypes, setShowRequestTypes] = useState(false);\n  const [repairFormFields, setRepairFormFields] = useState([]);\n  const [formFields, setFormFields] = useState([]);\n  const [formTitle, setFormTitle] = useState('');\n\n  // 獲取區域資料\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/areas')\n      .then(response => setAreas(response.data))\n      .catch(error => console.error(error));\n  }, []);\n\n  // 切換區域\n  const handleAreaChange = (e) => {\n    const areaId = e.target.value;\n    setSelectedArea(areaId);\n    axios.get(`http://localhost:5001/api/devices/${areaId}`)\n      .then(response => setDevices(response.data))\n      .catch(error => console.error(error));\n    \n    // 獲取區域的平面圖\n    const selectedAreaData = areas.find(area => area.id === parseInt(areaId));\n    if (selectedAreaData) {\n      setFloorplan(selectedAreaData.floorplans[0] || null);\n    }\n  };\n\n  // 確保在區域資料獲取後更新 floorplan\n  useEffect(() => {\n    if (selectedArea) {\n      const selectedAreaData = areas.find(area => area.id === parseInt(selectedArea));\n      if (selectedAreaData) {\n        setFloorplan(selectedAreaData.floorplans[0] || null);\n      }\n    }\n  }, [areas, selectedArea]);\n\n  // 確保在區域資料獲取後更新 devices\n  useEffect(() => {\n    if (selectedArea) {\n      axios.get(`http://localhost:5001/api/devices/${selectedArea}`)\n        .then(response => setDevices(response.data))\n        .catch(error => console.error(error));\n    }\n  }, [selectedArea]);\n\n  // 點擊設備點\n  const handleDeviceClick = (deviceId) => {\n    const device = devices.find(d => d.id === deviceId);\n    setSelectedDevice(device);\n    setShowDeviceInfo(true);\n\n    // 獲取設備的基本資料\n    axios.get(`http://localhost:5001/api/deviceDetails/${deviceId}`)\n      .then(response => {\n        const deviceInfo = response.data;\n        setDeviceDetails(deviceInfo);\n        const deviceInfoCount = deviceInfo.length;\n        setDeviceDetails(prevDetails => ({\n        ...prevDetails,\n        資料: deviceInfoCount || '待補充',\n        }))\n      })\n      .catch(error => console.error(error));\n\n    // 獲取設備的維護紀錄\n    axios.get(`http://localhost:5001/api/maintenanceRecords/${deviceId}`)\n      .then(response => {\n        const records = response.data;\n        setMaintenanceRecords(records);\n        const maintenanceCount = records.length;\n        const lastMaintenanceDate = records.length > 0 ? records.sort((a, b) => new Date(b.date) - new Date(a.date))[0].date : '無';\n        setMaintenanceRecords(prevDetails => ({\n          ...prevDetails,\n          lastMaintenanceDate: lastMaintenanceDate || '無',\n          maintenanceCount: maintenanceCount || 0\n        }));\n      })\n      .catch(error => console.error(error));\n  };\n\n  // 提交報修單\n  const handleRepairSubmit = (e) => {\n    e.preventDefault();\n    axios.post('http://localhost:5001/api/maintenance', {\n      deviceId: selectedDevice.id,\n      ...repairForm\n    })\n      .then(response => {\n        alert('報修單提交成功！');\n        setShowRepairForm(false);\n        setRepairForm({\n          subject: '',\n          description: '',\n          contactPerson: '',\n          contactPhone: ''\n        });\n      })\n      .catch(error => console.error(error));\n  };\n\n  // 獲取維護紀錄\n  const handleMaintenanceCountClick = () => {\n    axios.get(`http://localhost:5001/api/maintenanceRecords/${selectedDevice.id}`)\n      .then(response => {\n        setMaintenanceRecords(response.data);\n        setShowMaintenanceRecords(true);\n      })\n      .catch(error => console.error(error));\n  };\n\n  // 點擊開立請求單按鈕\n  const handleOpenRequestForm = () => {\n    axios.get('http://localhost:5001/api/requestTypes')\n      .then(response => {\n        setRequestTypes(response.data);\n        setShowRequestTypes(true);\n      })\n      .catch(error => console.error(error));\n  };\n\n  // 點擊請求單類型\n  const handleRequestTypeClick = (type) => {\n    const typeId = type === '報修單' ? 1 : 2; // 假設報修單的 ID 為 1，變更申請單的 ID 為 2\n    axios.get(`http://localhost:5001/api/formFields/${typeId}`)\n      .then(response => {\n        setFormFields(response.data);\n        setFormTitle(type); // 設置表格標題\n        setShowRepairForm(true);\n      })\n      .catch(error => console.error(error));\n    setShowRequestTypes(false);\n  };\n\n  // 提交請求單\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    axios.post(`http://localhost:5001/api/submitForm`, {\n      deviceId: selectedDevice.id,\n      formType: formTitle,\n      ...repairForm\n    })\n      .then(response => {\n        alert('請求單提交成功！');\n        setShowRepairForm(false);\n        setRepairForm({\n          subject: '',\n          description: '',\n          contactPerson: '',\n          contactPhone: ''\n        });\n      })\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>顯示器維護系統</h1>\n      <div>\n        <label>選擇區域：</label>\n        <select onChange={handleAreaChange}>\n          <option value=\"\">請選擇</option>\n          {areas.map(area => (\n            <option key={area.id} value={area.id}>{area.name}</option>\n          ))}\n        </select>\n      </div>\n      {floorplan && (\n        <div style={{ width: '100%', marginTop: '20px', position: 'relative' }}>\n          <img src={floorplan} alt=\"Floorplan\" style={{ width: '100%' }} />\n          {devices.map(device => (\n            <div\n              key={device.id}\n              style={{\n                position: 'absolute',\n                top: `${device.y * 100 / 662}%`,\n                left: `${device.x * 100 / 1316}%`,\n                width: '20px',\n                height: '20px',\n                backgroundColor: 'red',\n                borderRadius: '50%',\n                transform: 'translate(-50%, -50%)',\n                cursor: 'pointer'\n              }}\n              title={device.type}\n              onClick={() => handleDeviceClick(device.id)}\n            />\n          ))}\n        </div>\n      )}\n      {showDeviceInfo && selectedDevice && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowDeviceInfo(false)}>&times;</span>\n            <div className=\"device-info\">\n              <div className=\"device-details\">\n                <h2>設備基本資訊</h2>\n                {Object.entries(deviceDetails).map(([key, value]) => (\n                  <p key={key}><strong>{key}：</strong>{value}</p>\n                ))}\n              </div>\n              <div className=\"maintenance-history\">\n                <h3>維護歷程紀錄</h3>\n                <p><strong>最近維護日期：</strong>{maintenanceRecords.lastMaintenanceDate}</p>\n                <p><strong>維修次數：</strong><span className=\"link\" onClick={handleMaintenanceCountClick}>{maintenanceRecords.maintenanceCount}</span></p>\n                <button onClick={handleOpenRequestForm}>開立請求單</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {showRequestTypes && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowRequestTypes(false)}>&times;</span>\n            <h2>選擇請求單類型</h2>\n            <div>\n              {requestTypes.map(type => (\n                <button key={type} className=\"link\" onClick={() => handleRequestTypeClick(type)}>{type}</button>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n      {showMaintenanceRecords && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowMaintenanceRecords(false)}>&times;</span>\n            <h3>相關請求單</h3>\n            <div className=\"maintenance-records\">\n              {maintenanceRecords.map(record => (\n                <div key={record.id} className=\"maintenance-card\">\n                  <p><strong>日期：</strong>{record.date}</p>\n                  <p><strong>描述：</strong>{record.description}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n      {showRepairForm && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\" onClick={() => setShowRepairForm(false)}>&times;</span>\n            <h2>{formTitle}</h2> {/* 動態設置表格標題 */}\n            <form onSubmit={handleFormSubmit}>\n              {formFields.map(field => (\n                <div key={field.name}>\n                  <label>{field.label}：</label>\n                  {field.type === 'textarea' ? (\n                    <textarea\n                      value={repairForm[field.name]}\n                      onChange={(e) => setRepairForm({ ...repairForm, [field.name]: e.target.value })}\n                      required={field.required}\n                    />\n                  ) : (\n                    <input\n                      type={field.type}\n                      value={repairForm[field.name]}\n                      onChange={(e) => setRepairForm({ ...repairForm, [field.name]: e.target.value })}\n                      required={field.required}\n                    />\n                  )}\n                </div>\n              ))}\n              <button type=\"submit\">提交</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}